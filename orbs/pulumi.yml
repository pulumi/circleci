version: 2.1

description:
    "Pulumi: Cloud Native Infrastructure as Code

    Create, deploy, and manage cloud native applications and infrastructure
    in your favorite language, using an open source platform that enables
    sharing, reuse, and safe and predictable changes in a team environment.
    
    The Pulumi Orbs for CircleCI enables you to use easily integrate Pulumi
    into your CircleCI workflows.
    
    Repo: https://circleci.com/orbs/registry/orb/pulumi/pulumi"

commands:

  # login command
  login:
    parameters:
      version:
        type: string
        description:
          "Version of the Pulumi CLI to install. Defaults to the latest version."
        default: latest
      cloud-url:
        type: string
        description: "URL of the Pulumi service to log into."
        default: https://api.pulumi.com
      access-token:
        type: string
        description:
          "The access token to use, defaulting to `$PULUMI_ACCESS_TOKEN` so you can
          set the environment variable and not need to declare a value in config."
        default: "${PULUMI_ACCESS_TOKEN}"
    steps:
      - run: 
          name: "Install Pulumi CLI, if needed"
          command: |
              if [ << parameters.version >> == "latest" ]; then
                curl -L https://get.pulumi.com/ | bash -s
              else
                curl -L https://get.pulumi.com/ | bash -s -- --version << parameters.version >>
              fi
              # Add to PATH
              echo 'export PATH=${HOME}/.pulumi/bin:$PATH' >> $BASH_ENV
              source $BASH_ENV
      - run:
          name: "Log into Pulumi"
          command: |
            export PULUMI_ACCESS_TOKEN="<< parameters.access-token >>"
            pulumi login --cloud-url << parameters.cloud-url >>

  # stack init command
  stack_init:
    parameters:
      stack:
        type: string
        description: "Name of the stack to initialize."
      secrets_provider:
        type: string
        description: "The type of the provider that should be used to encrypt and decrypt secrets (possible choices: default, passphrase, awskms, azurekeyvault, gcpkms, hashivault) (default "default")."
        default: "default"
      working_directory:
        type: string
        description:
            "The relative working directory to use, i.e. where your Pulumi.yaml is located."
        default: "."
    steps:
      - run:
          name: "pulumi stack init --stack << parameters.stack >> --secrets-provider << parameters.secrets_provider >>"
          command: pulumi stack init --stack << parameters.stack >> --secrets-provider << parameters.secrets_provider >> --cwd << parameters.working_directory >>

  # stack rm command
  stack_rm:
    parameters:
      stack:
        type: string
        description: "Name of the stack to remove."
      force:
        type: boolean
        description: "Forces deletion of the stack, leaving behind any resources managed by the stack."
        default: false
      working_directory:
        type: string
        description:
            "The relative working directory to use, i.e. where your Pulumi.yaml is located."
        default: "."
    steps:
      - run:
          name: "pulumi stack rm << parameters.stack >>"
          command: pulumi stack rm << parameters.stack >> <<# parameters.force >>--force<</ parameters.force >> --cwd << parameters.working_directory >>

  # preview command
  preview:
    parameters:
      stack:
        type: string
        description: "Name of the Pulumi stack to preview."
      working_directory:
        type: string
        description:
            "The relative working directory to use, i.e. where your Pulumi.yaml is located."
        default: "."
    steps:
      - run:
          name: "pulumi preview --stack << parameters.stack >>"
          command: pulumi preview --stack << parameters.stack >> --cwd << parameters.working_directory >>

  # update command
  update:
    parameters:
      stack:
        type: string
        description: "Name of the Pulumi stack to update."
      working_directory:
        type: string
        description:
            "The relative working directory to use, i.e. where your Pulumi.yaml is located."
        default: "."
      skip-preview:
        type: boolean
        description: "Do not perform a preview before performing the update."
        default: false
    steps:
      - run: 
          name: "pulumi update --stack << parameters.stack >>"
          command: pulumi update --stack << parameters.stack >> --cwd << parameters.working_directory >> <<# parameters.skip-preview >>--skip-preview<</ parameters.skip-preview >>
  
examples:
  login_example:
    description:
        "Using the pulumi/login orb, specifying a specific version of the CLI to install and
        a value other than ${PULUMI_ACCESS_TOKEN} to use for the access token."
    usage:
      version: 2.1
      orbs:
        pulumi: pulumi/pulumi@1.0.0
      jobs:
        build:
          docker:
            - image: circleci/node:10
          working_directory: ~/repo/
          steps:
            - pulumi/login:
                version: "16.0.2"
                access-token: ${OTHER_ACCESS_TOKEN}

  update_example:
    description:
        "Runs `pulumi update` for a stack. The `working_directory` parameter can be used
        if the Pulumi.yaml file is not in the current working directory."
    usage:
      version: 2.1
      orbs:
        pulumi: pulumi/pulumi@1.0.0
      jobs:
        build:
          docker:
            - image: circleci/node:10
          working_directory: ~/repo/
          steps:
            - checkout
            - pulumi/login
            - pulumi/update:
                stack: robot-co/website-prod
                working_directory: ~/repo/src/website/
